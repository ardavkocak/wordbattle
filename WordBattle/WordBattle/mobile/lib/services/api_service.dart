import 'dart:convert';
import 'package:http/http.dart' as http;

class ApiService {
  static const String baseUrl = 'http://localhost:8000'; // Chrome server iÃ§in

  // ğŸ†• Yeni Oyun BaÅŸlat (POST /game/create)
  static Future<Map<String, dynamic>?> startGame({
    required int userId,
    required String duration,
  }) async {
    final url = Uri.parse('$baseUrl/game/create?user_id=$userId');

    try {
      final response = await http.post(
        url,
        headers: {"Content-Type": "application/json"},
        body: jsonEncode({"duration": duration}),
      );

      final Map<String, dynamic> data = jsonDecode(response.body);
      if (response.statusCode == 200) {
        return data; // {"message": "...", "game_id": ...}
      } else {
        return data; // {"detail": "..."}
      }
    } catch (e) {
      print('startGame hatasÄ±: $e');
      return {"detail": "Bilinmeyen bir hata oluÅŸtu."};
    }
  }

  // ğŸ”¥ Oyun Durumunu Kontrol Et (GET /game/status)
  static Future<String?> checkGameStatus({required int gameId}) async {
    final url = Uri.parse('$baseUrl/game/status?game_id=$gameId');
    try {
      final response = await http.get(url);
      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        return data["status"];
      }
    } catch (e) {
      print('Game status kontrol edilemedi: $e');
    }
    return null;
  }

  // ğŸ”¥ TahtayÄ± Ã‡ek (GET /game/get_board)
  static Future<List<List<String>>?> fetchBoard(int gameId) async {
    final url = Uri.parse('$baseUrl/game/get_board?game_id=$gameId');

    try {
      final response = await http.get(url);

      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        if (data['board'] != null) {
          List<List<String>> board = List<List<String>>.from(
            data['board'].map((row) => List<String>.from(row)),
          );
          return board;
        } else {
          return null; // henÃ¼z tahtasÄ± olmayan oyun
        }
      } else {
        print("fetchBoard sunucu hatasÄ±: ${response.statusCode}");
        return null;
      }
    } catch (e) {
      print("fetchBoard Ã§ekilirken hata oluÅŸtu: $e");
      return null;
    }
  }

  // ğŸ”¥ TahtayÄ± GÃ¼ncelle (POST /game/update_board)
  static Future<bool> updateBoard({
    required int gameId,
    required List<List<String>> board,
  }) async {
    final url = Uri.parse('$baseUrl/game/update_board');

    try {
      final response = await http.post(
        url,
        headers: {"Content-Type": "application/json"},
        body: jsonEncode({"game_id": gameId, "board": board}),
      );

      if (response.statusCode == 200) {
        return true;
      } else {
        print('updateBoard baÅŸarÄ±sÄ±z: ${response.body}');
        return false;
      }
    } catch (e) {
      print('updateBoard hatasÄ±: $e');
      return false;
    }
  }

  // ğŸ†• Oyuncu sÄ±rasÄ± kimde? (GET /game/turn)
  static Future<int?> fetchTurnUserId({required int gameId}) async {
    final url = Uri.parse('$baseUrl/game/turn?game_id=$gameId');

    try {
      final response = await http.get(url);
      if (response.statusCode == 200) {
        final data = jsonDecode(response.body);
        return data["turn_user_id"];
      } else {
        print('fetchTurnUserId sunucu hatasÄ±: ${response.statusCode}');
        return null;
      }
    } catch (e) {
      print('fetchTurnUserId hatasÄ±: $e');
      return null;
    }
  }

  // ğŸ†• SÄ±rayÄ± deÄŸiÅŸtir (POST /game/change_turn)
  static Future<bool> changeTurn({required int gameId}) async {
    final url = Uri.parse('$baseUrl/game/change_turn');

    try {
      final response = await http.post(
        url,
        headers: {"Content-Type": "application/json"},
        body: jsonEncode({"game_id": gameId}),
      );

      if (response.statusCode == 200) {
        return true;
      } else {
        print('changeTurn baÅŸarÄ±sÄ±z: ${response.body}');
        return false;
      }
    } catch (e) {
      print('changeTurn hatasÄ±: $e');
      return false;
    }
  }

  static Future<Map<String, dynamic>?> fetchGameDetails(int gameId) async {
    final url = Uri.parse('$baseUrl/game/details?game_id=$gameId');

    try {
      final response = await http.get(url);

      if (response.statusCode == 200) {
        return jsonDecode(response.body);
      } else {
        print('fetchGameDetails sunucu hatasÄ±: ${response.statusCode}');
        return null;
      }
    } catch (e) {
      print('fetchGameDetails hatasÄ±: $e');
      return null;
    }
  }
}
